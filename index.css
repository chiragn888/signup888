#sign-in{
    /* Centers text and sets its size and color */
    text-align: center;
    font-size: 70px;
    font-weight: 800;
    color: white;
    margin-top: 100px;
    margin-bottom: 100px;
}
.input-field1{
    /* General style for the input fields, with border and background details */
    width: 90%;
    height: 50px;
    padding-left: 20px;
    border-radius: 8px;
    border-style: solid;
    background-color: rgba(0, 0, 0, 0);
    border-color: #ffffff;
    color: white;
    border-width: 1px;
    margin-bottom: 20px;
    font-size: 17px;
}
.input-field1::placeholder{
    /* Placeholder text color */
    color: white;
}
.input-field1:hover,
.input-field2:hover{
    /* Slight zoom effect for interactive feedback on hover */
    zoom: 105%;
}
.input-field2{
    /* Consistent style with .input-field1 */
    width: 90%;
    height: 50px;
    padding-left: 20px;
    border-radius: 8px;
    border-style: solid;
    background-color: rgba(0, 0, 0, 0);
    border-color: #ffffff;
    color: white;
    border-width: 1px;
    margin-bottom: 15px;
    font-size: 17px;
}
.input-field2::placeholder{
    /* Placeholder text color same as .input-field1 */
    color: white;
}
.button{
    /* Primary button styles */
    width: 80%;
    height: 37px;
    border-radius: 4px;
    font-size: 16px;
    border-style: none;
    background-image: linear-gradient(to right, #7f55ad, #3c96f5);
    color: white;
    margin-bottom: 15px;
    margin-top: 10px;
}
.button:hover{
    /* Interactive feedback for button hover */
    zoom: 105%;
    cursor: pointer;
}
#border{
    /* Container dimensions */
    height: 500px;
    width: 400px;
}

#fp{
    /* Style for the forgot password link */
    color: white;
    font-size: 15px;
    font-family: ".AppleSystemUIFont";
    text-decoration: none;
    margin-bottom: 10px;
    margin-top: 20px;
}
#fp:hover,
.fp1:hover{
    /* Hover effect for links */
    color: dodgerblue;
    cursor: pointer;
}
.fp1{
    /* Style for sign up link */
    color: white;
    font-size: 12px;
    font-family: ".AppleSystemUIFont";
    text-decoration: none;
    margin-bottom: 10px;
    margin-top: 35px;
}
::-webkit-scrollbar{
    /* Hide scrollbar for Webkit browsers */
    overflow: hidden;
}
.body{
    /* Base body styles */
    background-color: #050505;
    height: max-content;
    top: 0;
    margin-top: 0;
    padding-top: 0;
}
.gbutton {
    /* Style for Google sign-in button */
    width: 60%;
    padding-left: 20%;
    height: 37px;
    border-radius: 4px;
    background-color: white;
}
.gbutton:hover{
    /* Interactive feedback for Google sign-in button */
    zoom: 105%;
    cursor: pointer;
}

#sign-up{
    /* Centers text and sets its size and color for the sign up */
    text-align: center;
    font-size: 70px;
    font-weight: 800;
    color: white;
    margin-top: 100px;
    margin-bottom: 100px;
}
#border1{
    /* Container dimensions for the sign-up */
    height: 500px;
    width: 400px;
}
#part1,
#part2{
    /* Consistent styles for sign-in and sign-up containers */
    display: block;
    background-color: black;
}

.flip-container {
    /* Container for the flip effect */
    perspective: 1000px;
}
.flip-container.hover .flipper,
.flipper {
    /* Flip effect and styling */
    transition: 1.6s;
    transform-style: preserve-3d;
    position: relative;
}
.flip-container,
.front,
.back {
    /* Sizing of the flip components */
    width: 100%;
    height: 700px;
}
.front,
.back {
    /* Preserving the visibility during flip */
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
}
.front {
    /* Initial position of the front container */
    z-index: 2;
    transform: rotateY(0deg);
}
.back {
    /* Initial position of the back container, rotated 180 degrees on Y */
    transform: rotateY(180deg);
}

/* README Section Reference */
/* Include this in your README.md file

## Styling Conventions and Components

To maintain the visual coherence of the application, we follow specific styling conventions and have designed specialized components like the flip-container.

When adding or modifying styles:
- Use CSS variables for colors and fonts to ensure consistency. For example, define a `--primary-color` for the main color theme and use it across elements.
- Prioritize class selectors over id selectors to increase reusability.
- Keep a uniform `border-radius` and `padding` throughout to retain the design language.
- For hover effects, use subtle transformations like scaling (`zoom`) to provide feedback.
- Document any new styles or components to update our conventions and ensure that future modifications align with the current design.

Especially for the flip-container component:
- Use the existing `.flip-container` and `.flipper` classes to achieve the flip effect for any new card-like components. Add `.front` and `.back` classes to the front and back faces of your container.
- Respect the `transition` duration and `perspective` values to keep the flip animations uniform throughout the application.
*/ 